# REQUIRES: darwin

# This tests that RemoteAST querying the dynamic type of a variable
# doesn't import any modules into a module SwiftASTContext that
# weren't imported by that module in the source code.  Unfortunately
# this test is extremely sensitive to the side effects of the command
# interpreter and the debug info format, which is why it is written as
# a LIT test.

# RUN: rm -rf %T && mkdir -p %T && cd %T
# RUN: %target-swift-frontend -c -g -serialize-debugging-options \
# RUN:          -module-cache-path %T/cache \
# RUN:          -primary-file %S/Inputs/Library.swift \
# RUN:          -emit-module-path Library.part.swiftmodule \
# RUN:          -parse-as-library -module-name Library -o Library.o -I.
# RUN: %target-swift-frontend -serialize-debugging-options \
# RUN:          -module-cache-path %T/cache \
# RUN:          -merge-modules -emit-module \
# RUN:          -parse-as-library -sil-merge-partial-modules \
# RUN:          -disable-diagnostic-passes -disable-sil-perf-optzns \
# RUN:          -module-name Library Library.part.swiftmodule \
# RUN:          -o Library.swiftmodule -I%T
# RUN: %target-swiftc -Xlinker -dylib -o libLibrary.dylib Library.o \
# RUN:          -Xlinker -add_ast_path -Xlinker Library.swiftmodule \
# RUN:          -Xlinker -install_name -Xlinker @executable_path/libLibrary.dylib
# RUN: %target-swift-frontend -c -g -serialize-debugging-options \
# RUN:          -module-cache-path %T/cache \
# RUN:          -primary-file %S/Inputs/main.swift \
# RUN:          -module-name main -o main.o \
# RUN:          -emit-module-path main.part.swiftmodule \
# RUN:          -import-objc-header %S/Inputs/BridgingHeader.h \
# RUN:          -I. -Xcc -DSYNTAX_ERROR=1
# RUN: %target-swift-frontend -serialize-debugging-options  -merge-modules \
# RUN:          -module-cache-path %T/cache \
# RUN:          -emit-module main.part.swiftmodule \
# RUN:          -parse-as-library -sil-merge-partial-modules \
# RUN:          -disable-diagnostic-passes -disable-sil-perf-optzns \
# RUN:          -import-objc-header %S/Inputs/BridgingHeader.h \
# RUN:          -I%T -Xcc -DSYNTAX_ERROR=1 \
# RUN:          -module-name main -o main.swiftmodule
# RUN: %target-swiftc -o a.out main.o -Xlinker -add_ast_path \
# RUN:          -Xlinker main.swiftmodule  -L. -lLibrary
# RUN: %lldb a.out -s %s | FileCheck %s

b Library.swift:10
run
p input

# The {{ }} avoids accidentally matching the input script!
# CHECK-NOT: undeclared identifier {{'SYNTAX_ERROR'}}
# This is the static type of 'input'.
# CHECK: (LibraryProtocol) ${{R0}}
